import{_ as i,c as a,o as n,ae as t}from"./chunks/framework.TZUt33w2.js";const g=JSON.parse('{"title":"步骤 1：创建 GitHub 仓库","description":"","frontmatter":{},"headers":[],"relativePath":"git/ProjectInit.md","filePath":"git/ProjectInit.md"}'),l={name:"git/ProjectInit.md"};function e(h,s,p,k,r,o){return n(),a("div",null,s[0]||(s[0]=[t(`<p>将本地项目上传到GitHub新仓库的详细步骤：</p><h1 id="步骤-1-创建-github-仓库" tabindex="-1">步骤 1：创建 GitHub 仓库 <a class="header-anchor" href="#步骤-1-创建-github-仓库" aria-label="Permalink to &quot;步骤 1：创建 GitHub 仓库&quot;">​</a></h1><ol><li>登录 GitHub</li><li>点击右上角 ➕ &gt; New repository</li><li>填写仓库名称（Repository name）</li><li>选择公开/私有（Public/Private）</li><li><strong>不要勾选</strong> &quot;Initialize this repository with a README&quot;</li></ol><h1 id="步骤-2-初始化本地仓库" tabindex="-1">步骤 2：初始化本地仓库 <a class="header-anchor" href="#步骤-2-初始化本地仓库" aria-label="Permalink to &quot;步骤 2：初始化本地仓库&quot;">​</a></h1><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入项目根目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your-project-path</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 初始化Git仓库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加所有文件到暂存区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 提交代码（建议使用明确描述）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Initial commit&quot;</span></span></code></pre></div><h1 id="步骤-3-关联远程仓库" tabindex="-1">步骤 3：关联远程仓库 <a class="header-anchor" href="#步骤-3-关联远程仓库" aria-label="Permalink to &quot;步骤 3：关联远程仓库&quot;">​</a></h1><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 复制GitHub仓库的HTTPS/SSH地址（推荐使用SSH）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:your-username/repo-name.git</span></span></code></pre></div><h1 id="步骤-4-推送代码" tabindex="-1">步骤 4：推送代码 <a class="header-anchor" href="#步骤-4-推送代码" aria-label="Permalink to &quot;步骤 4：推送代码&quot;">​</a></h1><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 首次推送需指定上游分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 后续推送只需</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span></span></code></pre></div><h1 id="常用补充操作" tabindex="-1">常用补充操作 <a class="header-anchor" href="#常用补充操作" aria-label="Permalink to &quot;常用补充操作&quot;">​</a></h1><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看远程仓库关联状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看本地分支状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 忽略指定文件（需创建.gitignore）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;node_modules/&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .gitignore</span></span></code></pre></div><h1 id="常见问题排查" tabindex="-1">常见问题排查 <a class="header-anchor" href="#常见问题排查" aria-label="Permalink to &quot;常见问题排查&quot;">​</a></h1><ol><li>权限拒绝：检查SSH密钥是否已添加到GitHub账户</li><li>文件冲突：先执行git pull origin main合并远程修改</li><li>忽略文件失效：确保.gitignore文件在项目根目录</li></ol><blockquote><p>💡 提示：如果使用HTTPS方式首次推送需输入GitHub账号密码，建议配置<a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh" target="_blank" rel="noreferrer">SSH密钥</a>提升安全性。</p></blockquote>`,14)]))}const c=i(l,[["render",e]]);export{g as __pageData,c as default};
