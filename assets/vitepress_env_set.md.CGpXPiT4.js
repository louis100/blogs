import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.C4SRkA9c.js";const g=JSON.parse('{"title":"Vitepress 多环境配置","description":"","frontmatter":{},"headers":[],"relativePath":"vitepress/env_set.md","filePath":"vitepress/env_set.md","lastUpdated":1761188845000}'),l={name:"vitepress/env_set.md"};function e(h,s,p,k,d,r){return t(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="vitepress-多环境配置" tabindex="-1">Vitepress 多环境配置 <a class="header-anchor" href="#vitepress-多环境配置" aria-label="Permalink to &quot;Vitepress 多环境配置&quot;">​</a></h1><p>以下是 Vitepress 多环境配置的实现方案，基于 Vite 原生环境变量机制适配文档项目场景 35：</p><h2 id="一、环境变量文件配置" tabindex="-1">一、环境变量文件配置 <a class="header-anchor" href="#一、环境变量文件配置" aria-label="Permalink to &quot;一、环境变量文件配置&quot;">​</a></h2><h3 id="创建环境变量文件-‌" tabindex="-1">创建环境变量文件 ‌ <a class="header-anchor" href="#创建环境变量文件-‌" aria-label="Permalink to &quot;创建环境变量文件 ‌&quot;">​</a></h3><p>在项目根目录创建以下文件，区分不同环境：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.env</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                # 全局默认配置（所有环境共享）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.env.development</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 开发环境（本地运行）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.env.staging</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 测试环境（自定义模式）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.env.production</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 生产环境（构建发布）</span></span></code></pre></div><h3 id="定义环境变量规则-‌" tabindex="-1">定义环境变量规则 ‌ <a class="header-anchor" href="#定义环境变量规则-‌" aria-label="Permalink to &quot;定义环境变量规则 ‌&quot;">​</a></h3><ol><li>变量必须以 VITE_ 开头才能在客户端访问</li><li>示例 .env.staging 内容：</li></ol><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_BASE_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/docs/         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 基础路径</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_API_BASE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=https://test.api.com  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 接口地址</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_ANALYTICS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=false          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试环境禁用统计</span></span></code></pre></div><h2 id="二、vitepress-配置接入" tabindex="-1">二、Vitepress 配置接入 <a class="header-anchor" href="#二、vitepress-配置接入" aria-label="Permalink to &quot;二、Vitepress 配置接入&quot;">​</a></h2><ol><li>‌修改 .vitepress/config.mts‌</li><li>动态读取环境变量：</li></ol><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig, loadEnv } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vitepress&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// VitePress 配置文件是SSR构建时运行的，需通过loadEnv手动加载环境变量：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> loadEnv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;VITE_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 显式加载</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;VITE_BASE_PATH:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VITE_BASE_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// import.meta.env.VITE_ANALYTICS</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 在此不行</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  base: env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VITE_BASE_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 优先使用环境变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  head: [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 根据环境加载不同统计脚本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VITE_ANALYTICS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;true&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;script&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { src: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/analytics.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }]] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="typescript-类型支持-‌" tabindex="-1">TypeScript 类型支持 ‌ <a class="header-anchor" href="#typescript-类型支持-‌" aria-label="Permalink to &quot;TypeScript 类型支持 ‌&quot;">​</a></h3><p>创建 env.d.ts 声明文件：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ImportMetaEnv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  VITE_BASE_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  VITE_API_BASE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  VITE_ANALYTICS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;true&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;false&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="三、多环境构建命令" tabindex="-1">三、多环境构建命令 <a class="header-anchor" href="#三、多环境构建命令" aria-label="Permalink to &quot;三、多环境构建命令&quot;">​</a></h2><h3 id="_1-配置-package-json-脚本-‌" tabindex="-1">1.配置 package.json 脚本 ‌ <a class="header-anchor" href="#_1-配置-package-json-脚本-‌" aria-label="Permalink to &quot;1.配置 package.json 脚本 ‌&quot;">​</a></h3><p>通过 <code>--mode</code> 参数指定环境模式：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress dev docs --mode development&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;build:staging&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress build docs --mode staging&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;build:prod&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress build docs --mode production&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;preview:staging&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress preview docs --mode staging&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_2-‌-运行示例-‌" tabindex="-1">2.‌ 运行示例 ‌ <a class="header-anchor" href="#_2-‌-运行示例-‌" aria-label="Permalink to &quot;2.‌ 运行示例 ‌&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开发环境（自动加载 .env.development）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试环境构建（加载 .env.staging）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build:staging</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生产环境构建（加载 .env.production）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build:prod</span></span></code></pre></div><h2 id="四、环境变量优先级说明" tabindex="-1">四、环境变量优先级说明 <a class="header-anchor" href="#四、环境变量优先级说明" aria-label="Permalink to &quot;四、环境变量优先级说明&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">变量来源</th><th style="text-align:left;">优先级</th><th style="text-align:left;">适用场景</th></tr></thead><tbody><tr><td style="text-align:left;">命令行参数 <code>--mode</code></td><td style="text-align:left;">最高</td><td style="text-align:left;">显式指定环境类型</td></tr><tr><td style="text-align:left;"><code>.env.[mode].local</code></td><td style="text-align:left;">高</td><td style="text-align:left;">本地覆盖配置（不提交）</td></tr><tr><td style="text-align:left;"><code>.env.[mode] </code></td><td style="text-align:left;">中</td><td style="text-align:left;">团队共享环境配置</td></tr><tr><td style="text-align:left;"><code>.env.local </code></td><td style="text-align:left;">低</td><td style="text-align:left;">全局本地覆盖</td></tr><tr><td style="text-align:left;"><code>.env </code></td><td style="text-align:left;">最低</td><td style="text-align:left;">基础默认配置</td></tr></tbody></table><h2 id="五、部署验证技巧" tabindex="-1">五、部署验证技巧 <a class="header-anchor" href="#五、部署验证技巧" aria-label="Permalink to &quot;五、部署验证技巧&quot;">​</a></h2><h3 id="查看当前生效变量-‌" tabindex="-1">查看当前生效变量 ‌ <a class="header-anchor" href="#查看当前生效变量-‌" aria-label="Permalink to &quot;查看当前生效变量 ‌&quot;">​</a></h3><p>在文档组件中添加调试代码：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;当前环境变量:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="‌github-actions-多环境部署-‌" tabindex="-1">‌GitHub Actions 多环境部署 ‌ <a class="header-anchor" href="#‌github-actions-多环境部署-‌" aria-label="Permalink to &quot;‌GitHub Actions 多环境部署 ‌&quot;">​</a></h3><p>在工作流中通过环境参数触发构建：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  deploy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Build Staging</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">github.ref == &#39;refs/heads/staging&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">npm run build:staging</span></span></code></pre></div><blockquote><p>该方案支持开发、测试、生产环境的无缝切换，通过环境变量隔离配置差异，符合 Vite 官方推荐实践 35。</p></blockquote>`,31)])])}const o=i(l,[["render",e]]);export{g as __pageData,o as default};
