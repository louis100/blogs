import{_ as h,c as l,o as k,ag as n,j as i,t as a}from"./chunks/framework.C4SRkA9c.js";const F=JSON.parse('{"title":"Vue 2 核心实现","description":"","frontmatter":{},"headers":[],"relativePath":"前端/Vue/Vue2 简版源码实现.md","filePath":"前端/Vue/Vue2 简版源码实现.md","lastUpdated":1761188845000}'),p={name:"前端/Vue/Vue2 简版源码实现.md"};function t(E,s,e,r,d,g){return k(),l("div",null,[s[6]||(s[6]=n("",10)),i("ul",null,[i("li",null,"解析DOM节点中的 "+a()+" 插值表达式：解析模板中的 "+a()+" 插值和 v- 指令",1),s[0]||(s[0]=i("li",null,"处理 v-model 等指令",-1)),s[1]||(s[1]=i("li",null,"创建对应的 Watcher 实现视图更新：为每个绑定创建对应的 Watcher",-1)),s[2]||(s[2]=i("li",null,"初始化时执行首次渲染",-1))]),s[7]||(s[7]=n("",5)),i("ul",null,[s[3]||(s[3]=i("li",null,"数据响应式绑定",-1)),s[4]||(s[4]=i("li",null,"双向数据绑定（v-model）",-1)),i("li",null,"模板插值（"+a()+"）",1),s[5]||(s[5]=i("li",null,"方法调用",-1))]),s[8]||(s[8]=i("p",null,"你可以通过修改输入框内容观察文本同步更新，点击按钮会反转文本内容。这展示了Vue的核心响应式机制，虽然省略了虚拟DOM等复杂实现，但保留了最核心的响应式原理。",-1)),s[9]||(s[9]=i("blockquote",null,[i("p",null,"典型数据流： 模板编译 → 创建 Watcher → 触发 getter → 依赖收集 → 数据修改 → 触发 setter → 通知更新 → 重新渲染")],-1)),s[10]||(s[10]=i("blockquote",null,[i("p",null,"注意：真实Vue2还包含虚拟DOM Diff、组件系统、异步更新队列等复杂机制，以上实现仅保留最核心的响应式原理。")],-1))])}const c=h(p,[["render",t]]);export{F as __pageData,c as default};
