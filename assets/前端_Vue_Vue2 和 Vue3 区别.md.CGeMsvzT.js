import{_ as r,c as a,o as t,ag as o}from"./chunks/framework.C4SRkA9c.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"前端/Vue/Vue2 和 Vue3 区别.md","filePath":"前端/Vue/Vue2 和 Vue3 区别.md","lastUpdated":1761188845000}'),n={name:"前端/Vue/Vue2 和 Vue3 区别.md"};function l(i,e,s,u,d,c){return t(),a("div",null,[...e[0]||(e[0]=[o('<p>Vue 2 和 Vue 3 是 Vue.js 框架的两个主要版本，它们在性能、API 设计、响应式系统等方面有显著差异。以下是两者的核心区别：</p><hr><h3 id="_1-响应式系统" tabindex="-1"><strong>1. 响应式系统</strong> <a class="header-anchor" href="#_1-响应式系统" aria-label="Permalink to &quot;**1. 响应式系统**&quot;">​</a></h3><ul><li><strong>Vue 2</strong>：基于 <code>Object.defineProperty</code>，通过递归遍历对象属性实现数据劫持，但无法自动检测新增/删除属性，需手动调用 <code>Vue.set</code> 或 <code>Vue.delete</code>。</li><li><strong>Vue 3</strong>：改用 <code>Proxy</code> 实现响应式，支持动态属性监听和深层性能优化，无需手动处理新增/删除属性。</li></ul><hr><h3 id="_2-组合式-api-composition-api" tabindex="-1"><strong>2. 组合式 API (Composition API)</strong> <a class="header-anchor" href="#_2-组合式-api-composition-api" aria-label="Permalink to &quot;**2. 组合式 API (Composition API)**&quot;">​</a></h3><ul><li><strong>Vue 2</strong>：使用 <strong>Options API</strong>，逻辑分散在 <code>data</code>、<code>methods</code>、<code>computed</code> 等选项中，大型组件难以维护。</li><li><strong>Vue 3</strong>：引入 <strong>Composition API</strong>，通过 <code>setup</code> 函数按功能组织代码，支持逻辑复用（如自定义 Hook）。</li></ul><hr><h3 id="_3-生命周期钩子" tabindex="-1"><strong>3. 生命周期钩子</strong> <a class="header-anchor" href="#_3-生命周期钩子" aria-label="Permalink to &quot;**3. 生命周期钩子**&quot;">​</a></h3><ul><li><strong>Vue 2</strong>：钩子名如 <code>beforeCreate</code>、<code>created</code>、<code>beforeDestroy</code>。</li><li><strong>Vue 3</strong>：钩子名添加 <code>on</code> 前缀（如 <code>onMounted</code>、<code>onUnmounted</code>），需显式导入。</li></ul><hr><h3 id="_4-性能优化" tabindex="-1"><strong>4. 性能优化</strong> <a class="header-anchor" href="#_4-性能优化" aria-label="Permalink to &quot;**4. 性能优化**&quot;">​</a></h3><ul><li><strong>虚拟 DOM</strong>：Vue 3 重写 Diff 算法，减少不必要的 DOM 操作。</li><li><strong>Tree Shaking</strong>：Vue 3 支持按需打包，减小体积。</li><li><strong>SSR 速度</strong>：Vue 3 的服务器端渲染性能更优。</li></ul><hr><h3 id="_5-新特性" tabindex="-1"><strong>5. 新特性</strong> <a class="header-anchor" href="#_5-新特性" aria-label="Permalink to &quot;**5. 新特性**&quot;">​</a></h3><ul><li><strong>多根节点</strong>：Vue 3 支持多根组件模板（Fragment），无需单一根元素包裹。</li><li><strong>Teleport</strong>：将组件渲染到 DOM 任意位置。</li><li><strong>Suspense</strong>：处理异步组件加载状态。</li></ul><hr><h3 id="_6-typescript-支持" tabindex="-1"><strong>6. TypeScript 支持</strong> <a class="header-anchor" href="#_6-typescript-支持" aria-label="Permalink to &quot;**6. TypeScript 支持**&quot;">​</a></h3><ul><li><strong>Vue 2</strong>：TS 支持较弱。</li><li><strong>Vue 3</strong>：完全用 TS 重写，类型系统更完善。</li></ul><hr><h3 id="_7-全局-api-变化" tabindex="-1"><strong>7. 全局 API 变化</strong> <a class="header-anchor" href="#_7-全局-api-变化" aria-label="Permalink to &quot;**7. 全局 API 变化**&quot;">​</a></h3><ul><li><strong>Vue 2</strong>：通过 <code>Vue</code> 对象调用全局 API（如 <code>Vue.component</code>）。</li><li><strong>Vue 3</strong>：改为按需导入（如 <code>createApp</code>）。</li></ul><hr><h3 id="总结" tabindex="-1"><strong>总结</strong> <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;**总结**&quot;">​</a></h3><p>Vue 3 在性能、开发体验和扩展性上均有显著提升，但 Vue 2 生态成熟，适合遗留项目。迁移时需注意非兼容性变更。如果需要更具体的迁移指导，可以参考官方文档。</p><p>引用链接： 1.<a href="https://cn.vuejs.org/about/faq" target="_blank" rel="noreferrer">常见问题 - cn.vuejs.org</a> 2.<a href="https://blog.csdn.net/2301_79459824/article/details/147645669" target="_blank" rel="noreferrer">vue2和vue3的区别(超全面) - CSDN博客</a> 3.<a href="https://blog.csdn.net/weixin_69877464/article/details/147488578" target="_blank" rel="noreferrer">Vue2与Vue3主要区别总结 - CSDN博客</a> 4.<a href="https://baijiahao.baidu.com/s?id=1827550756584284884&amp;wfr=spider&amp;for=pc" target="_blank" rel="noreferrer">vue 2和vue 3区别是什么? - 破壳科普社</a> 5.<a href="https://www.cnblogs.com/Mvloveyouforever/p/18383776" target="_blank" rel="noreferrer">vue2 和 vue3的区别 - 博客园</a> 6.<a href="https://baijiahao.baidu.com/s?id=1825488758980188836&amp;wfr=spider&amp;for=pc" target="_blank" rel="noreferrer">vue2和vue3的主要区别 - 宸然的杂货铺</a> 7.<a href="https://www.cnblogs.com/lmj9911/p/17105191.html" target="_blank" rel="noreferrer">vue2和vue3的区别有哪些? - 博客园</a> 8.<a href="https://juejin.cn/post/7476127574609248265" target="_blank" rel="noreferrer">Vue2和Vue3究竟有哪些区别 - 掘金开发者社区</a> 9.<a href="https://blog.csdn.net/loverdany/article/details/147775119" target="_blank" rel="noreferrer">vue2与vue3的区别【高频考点】 - CSDN博客</a> 10.<a href="https://blog.csdn.net/weixin_45351117/article/details/147601376" target="_blank" rel="noreferrer">vue面试题---vue2和vue3有哪些区别 - CSDN博客</a> 11.<a href="https://easylearn.baidu.com/edu-page/tiangong/questiondetail?id=1833207074352386223&amp;fr=search" target="_blank" rel="noreferrer">Vue3和Vue2的主要区别是什么? - 百度教育</a> 12.<a href="http://zhuanlan.zhihu.com/p/1891092171622420607" target="_blank" rel="noreferrer">🍇 别错过!2025 Vue 面试最全问题整理来了! - 前端大卫</a> 13.<a href="https://developer.aliyun.com/article/1528556" target="_blank" rel="noreferrer">vue2和vue3区别 - 阿里云开发者社区</a> 14.<a href="http://zhuanlan.zhihu.com/p/1908124094160958888" target="_blank" rel="noreferrer">vue 的版本对比以及技术栈的选择建议 - 知乎 - 爱前端的露露</a> 15.<a href="https://baijiahao.baidu.com/s?id=1823729427556920653&amp;wfr=spider&amp;for=pc" target="_blank" rel="noreferrer">vue2和vue3区别 - 破壳科普社</a> 16.<a href="https://haokan.baidu.com/v?pd=wisenatural&amp;vid=1291330489095940874" target="_blank" rel="noreferrer">95.Vue3与Vue2的区别?,教育,职业教育,好看视频 - 前端加油站</a> 17.<a href="https://baijiahao.baidu.com/s?id=1765485801229809242&amp;wfr=spider&amp;for=pc" target="_blank" rel="noreferrer">Vue2和Vue3数据双向绑定原理的区别及优缺点 - 尚硅谷教育</a> 18.<a href="http://mbd.baidu.com/newspage/data/dtlandingsuper?nid=dt_3778037561329341445" target="_blank" rel="noreferrer">🚀 Vue3与Vue2:性能与功能的飞跃 - 搞科研的Kvemia暄米</a> 19.<a href="http://www.bilibili.com/video/BV1fu4m1A7k2" target="_blank" rel="noreferrer">流程引擎vue2和vue3版本对比-内容讲解和介绍 - 哔哩哔哩</a> 20.<a href="http://mbd.baidu.com/newspage/data/dtlandingsuper?nid=dt_5016110434883321624" target="_blank" rel="noreferrer">📚前端:Vue2.0和Vue3.0 的一些主要区别 - 璃染子无</a></p>',26)])])}const g=r(n,[["render",l]]);export{p as __pageData,g as default};
